(()=>{"use strict";var n={n:e=>{var o=e&&e.__esModule?()=>e.default:()=>e;return n.d(o,{a:o}),o},d:(e,o)=>{for(var t in o)n.o(o,t)&&!n.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:o[t]})},o:(n,e)=>Object.prototype.hasOwnProperty.call(n,e)};const e=require("process");var o=n.n(e);const t=require("path");var i=n.n(t);const r=require("electron");var a=n.n(r);class l{mainWindow(){let n,e,t,r,l,s;"darwin"===o().platform?(n=340,e=423,t=304,r=352,l=540,s=642):(n=420,e=528,t=380,r=440,l=670,s=800);let d=1;"darwin"===o().platform&&(d=.8),this.window=new(a().BrowserWindow)({title:"Pritunl Client",icon:i().join(__dirname,"..","logo.png"),frame:!0,autoHideMenuBar:!0,fullscreen:!1,show:!1,width:n,height:e,minWidth:t,minHeight:r,maxWidth:l,maxHeight:s,backgroundColor:"#151719",webPreferences:{zoomFactor:d,devTools:!0,nodeIntegration:!0,contextIsolation:!1}}),this.window.on("closed",(()=>{a().app.quit(),this.window=null}));let p=!1;this.window.on("ready-to-show",(()=>{p||(p=!0,this.window.show(),-1!==o().argv.indexOf("--dev-tools")&&this.window.webContents.openDevTools())})),setTimeout((()=>{p||(p=!0,this.window.show(),-1!==o().argv.indexOf("--dev-tools")&&this.window.webContents.openDevTools())}),800);let u="file://"+i().join(__dirname,"..","index.html");u+="?dev="+(-1!==o().argv.indexOf("--dev")?"true":"false"),u+="&dataPath="+encodeURIComponent(a().app.getPath("userData")),this.window.loadURL(u,{userAgent:"pritunl"}),a().app.dock&&a().app.dock.show()}run(){this.mainWindow()}}o().on("uncaughtException",(function(n){let e;e=n&&n.stack?n.stack:String(n),a().dialog.showMessageBox(null,{type:"error",buttons:["Exit"],title:"Pritunl Client - Process Error",message:"Error occured in main process:\n\n"+e}).then((function(){a().app.quit()}))})),a().app.dock&&a().app.dock.hide(),a().app.on("window-all-closed",(()=>{})),a().app.on("open-file",(()=>{(new l).run()})),a().app.on("open-url",(()=>{(new l).run()})),a().app.on("activate",(()=>{(new l).run()})),a().app.on("quit",(()=>{a().app.quit()})),a().app.on("ready",(()=>{let n=new(a().Tray)(i().join(__dirname,"..","logo.png"));n.on("click",(function(){(new l).run()})),n.on("double-click",(function(){(new l).run()}));let e=a().Menu.buildFromTemplate([{label:"Pritunl vTODO",click:function(){(new l).run()}},{label:"Exit",click:function(){a().app.quit()}}]);n.setToolTip("Pritunl vTODO"),n.setContextMenu(e),(new l).run()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,